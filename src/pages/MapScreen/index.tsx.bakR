import React, { useEffect, useState } from "react";
import { View, Text, StyleSheet } from 'react-native';
import Geolocation from 'react-native-geolocation-service';


type position = {
  coords: {
    accuracy: number;
    altitude: number;
    altitudeAccuracy: number;
    heading: number;
    latitude: number;
    longitude: number;
    speed: number;
  };
  mocked: boolean;
  provider: string;
  timestamp: number;
}

// type MapScreenProps = {
//   latitude?: number;
// }

// export const MapScreen = (props: MapScreenProps) => {
  export const MapScreen = () => {
    const [hasLocationPermission, setHasLocationPermission] = useState(true)
  const [position, setPosition] = useState<position>({
    coords: {
      accuracy: 0,
      altitude: 0,
      altitudeAccuracy: 0,
      heading: 0,
      latitude: 0,
      longitude: 0,
      speed: 0,
    },
    mocked: false,
    provider: '',
    timestamp: 0
  })
  
   
  // if (hasLocationPermission) {
  // Geolocation.getCurrentPosition(
  //     (position: any) => {
  //       // console.log(position);
  //       setPosition(position)
  //     },
  //     (error) => {
  //       // See error code charts below.
  //       console.log(error.code, error.message);
  //     },
  //     { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
  //   );
  // }

  function getGeoLocation(){
    // Geolocation.getCurrentPosition(
      Geolocation.watchPosition(
        (position: any) => {
        // console.log(position);
        setPosition(position)
      },
      (error) => {
        // See error code charts below.
        console.log(error.code, error.message);
      },
      // { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
      { enableHighAccuracy: true }
    );
  }

  useEffect(() => {
    getGeoLocation()
    console.log(position);

  }, [position])
    


  



  return (
    <View style={styles.container}>
      <Text>Accuracy: {position.coords.accuracy}</Text>
      <Text>altitude: {position.coords.altitude}</Text>
      <Text>altitudeAccuracy: {position.coords.altitudeAccuracy}</Text>
      <Text>heading: {position.coords.heading}</Text>
      <Text>latitude: {position.coords.latitude}</Text>
      <Text>longitude: {position.coords.longitude}</Text>
      <Text>speed: {position.coords.speed}</Text>
      <Text>mocked: {position.mocked}</Text>
      <Text>provider: {position.provider}</Text>
      <Text>timestamp: {position.timestamp}</Text>
    </View>
  )

}


const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#FFF",
  },

});